public class LinearEquation {
    private int x1;
    private int x2;
    private int y1;
    private int y2;

    public LinearEquation(int x1, int y1, int x2, int y2) {
        this.x1 = x1;
        this.y1 = y1;
        this.x2 = x2;
        this.y2 = y2;
    }

    public double roundedToHundredth(double val){
        double ValTimes100 = (val * 100) + 0.5;
        int Val100Int = (int) ValTimes100;
        return (double) Val100Int / 100;
    }

    public double slope(){
        double xDist = (double) x2 - x1;
        double yDist = (double) y2 - y1;
        double SlopeInit = yDist / xDist;
        return roundedToHundredth(SlopeInit);
    }

    public String slopeFrac(){
        String frac = "";
        int xDist = x2 - x1;
        int yDist = y2 - y1;
        if ((xDist < 0 && yDist < 0)||(xDist < 0 && yDist >= 0)){
            xDist *= -1;
            yDist *= -1;
            }
        if (yDist % xDist == 0){
            frac = (yDist / xDist) + "x";
        }
        else if (yDist % xDist != 0) {
            frac = yDist + "/" + xDist + "x";
        }
        else if (yDist / xDist == 1) {
            frac = "x";
        }
        else if (yDist / xDist == 0){
            frac = "";
        }

        return frac;
    }

    public double distance(){
        double sideA = (double) Math.abs(y2 - y1);
        double sideB = (double) Math.abs(x2 - x1);
        double sideCSquared = Math.pow(sideA, 2) + Math.pow(sideB, 2);
        double sideC = Math.sqrt(sideCSquared);
        return roundedToHundredth(sideC);
    }

    public double yIntercept(){
        double yInter = (double) y1 - (slope() * x1);
        return roundedToHundredth(yInter);
    }

    public String equation(){
        if (yIntercept() == 0){
            return "y = " + slopeFrac();
        } else if (slope() == 0){
            return "y = " + yIntercept();
        } else {
            if (yIntercept() < 0){
                return "y = " + slopeFrac() + " - " + Math.abs(yIntercept());
            }
            else {
                return "y = " + slopeFrac() + " + " + yIntercept();
            }
        }
    }

    public String coordinateForX(double x){
        double MX = slope() * x;
        double MXplusB = MX + yIntercept();
        return "(" + x + ", " + MXplusB + ")";
    }

    public String lineInfo(){
        return "The two points are: (" + x1 + ", " + y1 + ") and (" + x2 + ", " + y2 + ") \nThe equation of the line between these points is: " + equation() + "\nThe y-intercept of this line is: " + yIntercept() + "\nThe slope of this line is: " + slope() + "\nThe distance between these points is " + distance();
    }
}
